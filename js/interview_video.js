const chatLog = document.getElementById("chatLog");
const sendBtn = document.getElementById("sendBtn");
const micBtn = document.getElementById("micBtn");
const input = document.getElementById("userInput");
const userVideo = document.getElementById("userVideo");
const recordBtn = document.getElementById("recordBtn");

let currentQuestion = 0;
let mediaStream = null;
let mediaRecorder = null;
let recordedChunks = [];

// Èù¢Êé•ÂÆò„ÅÆË≥™Âïè
const questions = [
  "Êú¨Êó•„ÅØ„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ„Åù„Çå„Åß„ÅØÈù¢Êé•„ÇíÂßã„ÇÅ„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ",
  "„Åæ„Åö„ÅØËá™Â∑±Á¥π‰ªã„Çí„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ",
  "Â§ßÂ≠¶„Åß„ÅØ„Å©„ÅÆ„Çà„ÅÜ„Å™„Åì„Å®„ÇíÂ≠¶„Å∞„Çå„Åæ„Åó„Åü„ÅãÔºü",
  "ÂøóÊúõÂãïÊ©ü„ÇíÊïô„Åà„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
  "ÊúÄÂæå„Å´‰Ωï„ÅãË≥™Âïè„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºü"
];

// ÂàùÊúüË°®Á§∫Ôºà„Ç´„É°„É©„Éª„Éû„Ç§„ÇØ„ÅØËµ∑Âãï„Åó„Å™„ÅÑÔºâ
window.onload = () => {
  speakAndDisplayBot(questions[currentQuestion]);
};

// Èü≥Â£∞Ë™≠„Åø‰∏ä„Åí„Å®„ÉÅ„É£„ÉÉ„ÉàË°®Á§∫
function speakAndDisplayBot(text) {
  const bubble = document.createElement("div");
  bubble.className = "bot";
  bubble.textContent = text;
  chatLog.appendChild(bubble);
  chatLog.scrollTop = chatLog.scrollHeight;

  const utter = new SpeechSynthesisUtterance(text);
  utter.lang = "ja-JP";
  speechSynthesis.speak(utter);
}

// Èù¢Êé•ËÄÖ„ÅÆÂõûÁ≠î„ÇíÈÄÅ‰ø°
sendBtn.addEventListener("click", () => {
  const text = input.value.trim();
  if (!text) return;

  const bubble = document.createElement("div");
  bubble.className = "user";
  bubble.textContent = text;
  chatLog.appendChild(bubble);
  chatLog.scrollTop = chatLog.scrollHeight;
  input.value = "";

  currentQuestion++;
  if (currentQuestion < questions.length) {
    setTimeout(() => speakAndDisplayBot(questions[currentQuestion]), 1000);
  }
});

// Èü≥Â£∞ÂÖ•ÂäõÔºà„Éû„Ç§„ÇØ„Éú„Çø„É≥Ôºâ
micBtn.addEventListener("click", () => {
  if (!("webkitSpeechRecognition" in window)) {
    alert("Èü≥Â£∞Ë™çË≠ò„ÅØ„Åì„ÅÆ„Éñ„É©„Ç¶„Ç∂„Åß„ÅØ„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ");
    return;
  }

  const recognition = new webkitSpeechRecognition();
  recognition.lang = "ja-JP";
  recognition.interimResults = false;
  recognition.continuous = false;

  recognition.start();
  micBtn.disabled = true;
  micBtn.textContent = "üé§‚Ä¶";

  recognition.onresult = (event) => {
    const transcript = event.results[0][0].transcript;
    input.value = transcript;
    micBtn.disabled = false;
    micBtn.textContent = "üé§";
  };

  recognition.onerror = () => {
    micBtn.disabled = false;
    micBtn.textContent = "üé§";
    alert("Èü≥Â£∞„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ");
  };
});

// „Ç´„É°„É©„Éª„Éû„Ç§„ÇØ„ÇíËµ∑ÂãïÔºàÊòéÁ§∫Êìç‰ΩúÊôÇ„ÅÆ„ÅøÔºâ
async function requestCameraAndMic() {
  try {
    mediaStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
    userVideo.srcObject = mediaStream;
    console.log("„Ç´„É°„É©„Éª„Éû„Ç§„ÇØË®±ÂèØÂÆå‰∫Ü");
  } catch (e) {
    alert("„Ç´„É°„É©„Åæ„Åü„ÅØ„Éû„Ç§„ÇØ„ÅÆ‰ΩøÁî®Ë®±ÂèØ„ÅåÂøÖË¶Å„Åß„ÅôÔºö" + e.message);
  }
}

// üé• „Éú„Çø„É≥Ôºö„Ç´„É°„É©Ëµ∑Âãï„Åæ„Åü„ÅØÂàá„ÇäÊõø„Åà
document.getElementById("videoBtn").addEventListener("click", () => {
  if (!mediaStream) {
    requestCameraAndMic(); // ÂàùÂõûÔºöË®±ÂèØ„ÇíÊ±Ç„ÇÅ„Çã
  } else {
    const videoTrack = mediaStream.getVideoTracks()[0];
    videoTrack.enabled = !videoTrack.enabled;
  }
});

// üéôÔ∏è „Éú„Çø„É≥Ôºö„Éû„Ç§„ÇØ„ÅÆON/OFF
document.getElementById("micToggleBtn").addEventListener("click", () => {
  if (!mediaStream) {
    alert("„Éû„Ç§„ÇØ„Åå„Åæ„Å†ÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åõ„ÇìÔºàüé•„Éú„Çø„É≥„ÇíÂÖà„Å´Êäº„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ");
    return;
  }
  const audioTrack = mediaStream.getAudioTracks()[0];
  audioTrack.enabled = !audioTrack.enabled;
});

// ‚è∫ „Éú„Çø„É≥ÔºöÈå≤Áîª„ÅÆÈñãÂßãÔºèÂÅúÊ≠¢
recordBtn.addEventListener("click", () => {
  if (!mediaStream) {
    alert("„Åæ„Åö üé• „Éú„Çø„É≥„Åß„Ç´„É°„É©„Éª„Éû„Ç§„ÇØ„ÇíËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
    return;
  }

  if (!mediaRecorder || mediaRecorder.state === "inactive") {
    startRecording();
  } else {
    stopRecording();
  }
});

// Èå≤Áîª„Çπ„Çø„Éº„Éà
function startRecording() {
  recordedChunks = [];
  mediaRecorder = new MediaRecorder(mediaStream);

  mediaRecorder.ondataavailable = (e) => {
    if (e.data.size > 0) recordedChunks.push(e.data);
  };

  mediaRecorder.onstop = () => {
    const blob = new Blob(recordedChunks, { type: "video/webm" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "interview_recording.webm";
    a.click();
    URL.revokeObjectURL(url);
  };

  mediaRecorder.start();
  document.querySelector("#recordBtn img").src = "icons/stop.svg";
  recordBtn.title = "Èå≤ÁîªÂÅúÊ≠¢";
}

// Èå≤Áîª„Çπ„Éà„ÉÉ„Éó
function stopRecording() {
  mediaRecorder.stop();
  document.querySelector("#recordBtn img").src = "icons/record.svg";
  recordBtn.title = "Èå≤ÁîªÈñãÂßã";
}
